{
  "hash": "e5c13740f76c18fbaaf00a2677bc6b32",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Model Development and Apparent Validation\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/initialize-data-analysis.r\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nRows: 5669 Columns: 113\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (20): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (4): baseline_date, LZD_start, LZD_end, test_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 780 Columns: 105\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (13): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (3): baseline_date, LZD_start, LZD_end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/BMA-model-no-initial-var.r\") # run_bas_glm() function\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmulti_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_bas_glm(\n    formula = flag_ADR_TP_ID ~ .\n  )\n\nsummary(multi_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         P(B != 0 | Y)       model 1   model 2       model 3\nIntercept                  1.000000000    1.00000000    1.0000    1.00000000\npatient_age                0.754491015    1.00000000    1.0000    0.00000000\npatient_sexTRUE            0.005036519    0.00000000    0.0000    0.00000000\nLZD_dose_per_weight        0.004954494    0.00000000    0.0000    0.00000000\nbaseline_CLCR              0.292859796    0.00000000    0.0000    1.00000000\ndept_ERTRUE                0.004521867    0.00000000    0.0000    0.00000000\ndept_ICUTRUE               0.016463157    0.00000000    0.0000    0.00000000\nbaseline_HGB               0.129647625    0.00000000    0.0000    0.00000000\nbaseline_WBC               0.006231078    0.00000000    0.0000    0.00000000\nbaseline_PLT               1.000000000    1.00000000    1.0000    1.00000000\nLZD_duration               0.999935031    1.00000000    1.0000    1.00000000\ninvasive_ETITRUE           0.156507712    0.00000000    0.0000    0.00000000\ninvasive_CVCTRUE           0.438656147    0.00000000    1.0000    0.00000000\ninvasive_IHDTRUE           0.006298887    0.00000000    0.0000    0.00000000\ninvasive_CRRTTRUE          0.978275125    1.00000000    1.0000    1.00000000\ncomorb_HTNTRUE             0.004866971    0.00000000    0.0000    0.00000000\ncomorb_DMTRUE              0.006292816    0.00000000    0.0000    0.00000000\ncomorb_HFTRUE              0.036491200    0.00000000    0.0000    0.00000000\ncomorb_anginaTRUE          0.004794885    0.00000000    0.0000    0.00000000\ncomorb_cirrTRUE            0.057749521    0.00000000    0.0000    0.00000000\ncomorb_COPDTRUE            0.010453365    0.00000000    0.0000    0.00000000\ncomorb_CVATRUE             0.038248825    0.00000000    0.0000    0.00000000\ncomorb_MITRUE              0.009945403    0.00000000    0.0000    0.00000000\ncomorb_KTRUE               0.004681836    0.00000000    0.0000    0.00000000\ncomorb_hematologicalTRUE   0.013207320    0.00000000    0.0000    0.00000000\ncomorb_hemaTRUE            0.005013150    0.00000000    0.0000    0.00000000\ninfect_sepsisTRUE          0.045345052    0.00000000    0.0000    0.00000000\ninfect_CAPTRUE             0.005264076    0.00000000    0.0000    0.00000000\ninfect_HAPTRUE             0.009763180    0.00000000    0.0000    0.00000000\ninfect_SSTITRUE            0.020082979    0.00000000    0.0000    0.00000000\ninfect_CNSTRUE             0.004608431    0.00000000    0.0000    0.00000000\ninfect_IAITRUE             0.004487560    0.00000000    0.0000    0.00000000\ninfect_UTITRUE             0.004582697    0.00000000    0.0000    0.00000000\ninfect_BJITRUE             0.005958217    0.00000000    0.0000    0.00000000\ninfect_septicemiaTRUE      0.119600150    0.00000000    0.0000    0.00000000\ncomed_aspirinTRUE          0.004529633    0.00000000    0.0000    0.00000000\ncomed_diclofenacTRUE       0.005245870    0.00000000    0.0000    0.00000000\ncomed_ibuprofenTRUE        0.005168361    0.00000000    0.0000    0.00000000\ncomed_paracetamolTRUE      0.005278635    0.00000000    0.0000    0.00000000\ncomed_penicillinTRUE       0.010757944    0.00000000    0.0000    0.00000000\ncomed_cephaTRUE            0.010614781    0.00000000    0.0000    0.00000000\ncomed_carbapenemTRUE       0.007402051    0.00000000    0.0000    0.00000000\ncomed_cotrimoxazolTRUE     0.057989794    0.00000000    0.0000    0.00000000\ncomed_vancomycinTRUE       0.020794860    0.00000000    0.0000    0.00000000\ncomed_levofloxacinTRUE     0.004983243    0.00000000    0.0000    0.00000000\ncomed_teicoplaninTRUE      0.129053401    0.00000000    0.0000    0.00000000\ncomed_ethambutolTRUE       0.005038065    0.00000000    0.0000    0.00000000\ncomed_pyrazinamidTRUE      0.009416236    0.00000000    0.0000    0.00000000\ncomed_rifampinTRUE         0.006370002    0.00000000    0.0000    0.00000000\ncomed_heparinTRUE          0.131012937    0.00000000    0.0000    0.00000000\ncomed_clopidogrelTRUE      0.013206727    0.00000000    0.0000    0.00000000\ncomed_enoxaparinTRUE       0.005210062    0.00000000    0.0000    0.00000000\ncomed_dexamethasonTRUE     0.005261192    0.00000000    0.0000    0.00000000\ncomed_amiodaronTRUE        0.032276675    0.00000000    0.0000    0.00000000\ncomed_furosemidTRUE        0.123128254    0.00000000    0.0000    0.00000000\ncomed_haloperidolTRUE      0.004054705    0.00000000    0.0000    0.00000000\ncomed_valproicTRUE         0.004573257    0.00000000    0.0000    0.00000000\nBF                                  NA    0.09912163    1.0000    0.03330452\nPostProbs                           NA    0.07360000    0.0713    0.02470000\nR2                                  NA    0.17030000    0.1804    0.16810000\ndim                                 NA    5.00000000    6.0000    5.00000000\nlogmarg                             NA -426.91916654 -424.6078 -428.00982113\n                              model 4      model 5\nIntercept                   1.0000000    1.0000000\npatient_age                 1.0000000    0.0000000\npatient_sexTRUE             0.0000000    0.0000000\nLZD_dose_per_weight         0.0000000    0.0000000\nbaseline_CLCR               0.0000000    1.0000000\ndept_ERTRUE                 0.0000000    0.0000000\ndept_ICUTRUE                0.0000000    0.0000000\nbaseline_HGB                0.0000000    0.0000000\nbaseline_WBC                0.0000000    0.0000000\nbaseline_PLT                1.0000000    1.0000000\nLZD_duration                1.0000000    1.0000000\ninvasive_ETITRUE            0.0000000    1.0000000\ninvasive_CVCTRUE            0.0000000    0.0000000\ninvasive_IHDTRUE            0.0000000    0.0000000\ninvasive_CRRTTRUE           1.0000000    1.0000000\ncomorb_HTNTRUE              0.0000000    0.0000000\ncomorb_DMTRUE               0.0000000    0.0000000\ncomorb_HFTRUE               0.0000000    0.0000000\ncomorb_anginaTRUE           0.0000000    0.0000000\ncomorb_cirrTRUE             0.0000000    0.0000000\ncomorb_COPDTRUE             0.0000000    0.0000000\ncomorb_CVATRUE              0.0000000    0.0000000\ncomorb_MITRUE               0.0000000    0.0000000\ncomorb_KTRUE                0.0000000    0.0000000\ncomorb_hematologicalTRUE    0.0000000    0.0000000\ncomorb_hemaTRUE             0.0000000    0.0000000\ninfect_sepsisTRUE           0.0000000    0.0000000\ninfect_CAPTRUE              0.0000000    0.0000000\ninfect_HAPTRUE              0.0000000    0.0000000\ninfect_SSTITRUE             0.0000000    0.0000000\ninfect_CNSTRUE              0.0000000    0.0000000\ninfect_IAITRUE              0.0000000    0.0000000\ninfect_UTITRUE              0.0000000    0.0000000\ninfect_BJITRUE              0.0000000    0.0000000\ninfect_septicemiaTRUE       0.0000000    0.0000000\ncomed_aspirinTRUE           0.0000000    0.0000000\ncomed_diclofenacTRUE        0.0000000    0.0000000\ncomed_ibuprofenTRUE         0.0000000    0.0000000\ncomed_paracetamolTRUE       0.0000000    0.0000000\ncomed_penicillinTRUE        0.0000000    0.0000000\ncomed_cephaTRUE             0.0000000    0.0000000\ncomed_carbapenemTRUE        0.0000000    0.0000000\ncomed_cotrimoxazolTRUE      0.0000000    0.0000000\ncomed_vancomycinTRUE        0.0000000    0.0000000\ncomed_levofloxacinTRUE      0.0000000    0.0000000\ncomed_teicoplaninTRUE       0.0000000    0.0000000\ncomed_ethambutolTRUE        0.0000000    0.0000000\ncomed_pyrazinamidTRUE       0.0000000    0.0000000\ncomed_rifampinTRUE          0.0000000    0.0000000\ncomed_heparinTRUE           0.0000000    0.0000000\ncomed_clopidogrelTRUE       0.0000000    0.0000000\ncomed_enoxaparinTRUE        0.0000000    0.0000000\ncomed_dexamethasonTRUE      0.0000000    0.0000000\ncomed_amiodaronTRUE         0.0000000    0.0000000\ncomed_furosemidTRUE         1.0000000    0.0000000\ncomed_haloperidolTRUE       0.0000000    0.0000000\ncomed_valproicTRUE          0.0000000    0.0000000\nBF                          0.2923214    0.2919177\nPostProbs                   0.0209000    0.0208000\nR2                          0.1780000    0.1780000\ndim                         6.0000000    6.0000000\nlogmarg                  -425.8376602 -425.8390422\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nimage(multi_model, rotate = FALSE)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\ndiagnostics(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-html/unnamed-chunk-2-7.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nmulti_predict_HPM <- variable.names(predict(multi_model, estimator = \"HPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # highest probability model\nmulti_predict_BPM <- variable.names(predict(multi_model, estimator = \"BPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # best predictive model, this model is weird\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.3.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.3.0\n✔ recipes      1.0.9     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata_patient_complete_response_as_factor <- data_patient_complete |>\n  mutate(\n    flag_ADR_TP_ID = as.factor(flag_ADR_TP_ID)\n  )\n\nmodel_full <- logistic_reg() |>\n  set_engine(\"glm\") |>\n  set_mode(\"classification\") |>\n  fit(\n    reformulate(\n      termlabels = multi_predict_HPM,\n      response = \"flag_ADR_TP_ID\"\n    ),\n    data = data_patient_complete_response_as_factor\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(CalibrationCurves)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: rms\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Hmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:parsnip':\n\n    translate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npHat <- predict(model_full$fit, data_patient_complete, type = \"response\")\nyTest <- data_patient_complete$flag_ADR_TP_ID\ncalperf <- valProbggplot(pHat, yTest)\n\napparent_performance_metrics <- tibble(\n  apparent_C_index = calperf$Cindex[[1]],\n  apparent_calibration_intercept = calperf$Calibration$Intercept[[1]],\n  apparent_calibration_slope = calperf$Calibration$Slope[[1]]\n)\n\nsave(apparent_performance_metrics, file = \"data/model-performance/apparent-performance-metrics.rda\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsave(model_full, file = \"data/model-performance/model-full.rda\")\n```\n:::",
    "supporting": [
      "3-apparent-performance_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}