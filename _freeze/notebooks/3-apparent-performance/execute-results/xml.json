{
  "hash": "6d404a1434764c1ff343a38b8bf2cddc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Model Development and Apparent Validation\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/initialize-data-analysis.r\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nRows: 5669 Columns: 113\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (20): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (4): baseline_date, LZD_start, LZD_end, test_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 780 Columns: 105\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (13): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (3): baseline_date, LZD_start, LZD_end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/BMA-model-no-initial-var.r\") # run_bas_glm() function\n```\n:::\n\n\n\n\n# Penalized Likelihood Methods\n## Backwards Stepwise Logistic Regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# library(StepReg)\n# run_stepwise_logit <- function(data, formula) {\n#   stepwiseLogit(\n#     formula,\n#     data = data,\n#     include = NULL,\n#     selection = \"backward\",\n#     select = \"AIC\"\n#   )\n# }\n\n# stepwise_model <- data_patient_complete |>\n#   select(all_of(predictor_list), flag_ADR_TP_ID) |>\n#   run_stepwise_logit(\n#     formula = flag_ADR_TP_ID ~ .\n#   )\n\n# stepwise_model |> summary()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrun_step_AIC <- function(data, formula) {\n  MASS::stepAIC(\n    glm(\n      formula = formula,\n      data = data\n    ),\n    direction = \"backward\",\n    trace = FALSE\n  )\n}\n\nstepwise_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_step_AIC(\n    formula = flag_ADR_TP_ID ~ .\n  )\n\nstepwise_model$coefficients |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18\n```\n\n\n:::\n:::\n\n\n\n\nResults: Stepwise algorithm selected 18 predictors.\n\n## LASSO Variable Selection\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(glmnet)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Matrix\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Matrix'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoaded glmnet 4.1-8\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npredictor_matrix <- data_patient_complete |>\n  select(all_of(predictor_list)) |>\n  as.matrix()\nresponse_matrix <- data_patient_complete |>\n  select(flag_ADR_TP_ID) |>\n  pull()\n\nlasso_fit <- glmnet(\n  x = predictor_matrix,\n  y = response_matrix,\n  family = \"binomial\",\n  alpha = 1\n)\n\ncv_lasso_fit <- cv.glmnet(\n  x = predictor_matrix,\n  y = response_matrix,\n  family = \"binomial\",\n  alpha = 1,\n  nfolds = 5\n)\n\ncoef(lasso_fit, s = cv_lasso_fit$lambda.min)@i |> length() - 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25\n```\n\n\n:::\n:::\n\n\n\n\nResults: LASSO algorithm selected 23-25 predictors.\n\nComment: Penalized likelihood methods have comparable predictive performance to Bayesian methods [citation needed], but select many more predictors.\n\n# Bayesian Model Selection\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmulti_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_bas_glm(\n    formula = flag_ADR_TP_ID ~ .\n  )\n\nsummary(multi_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         P(B != 0 | Y)       model 1   model 2       model 3\nIntercept                  1.000000000    1.00000000    1.0000    1.00000000\npatient_age                0.755603523    1.00000000    1.0000    0.00000000\npatient_sexTRUE            0.005618807    0.00000000    0.0000    0.00000000\nLZD_dose_per_weight        0.004967005    0.00000000    0.0000    0.00000000\nbaseline_CLCR              0.290418442    0.00000000    0.0000    1.00000000\ndept_ERTRUE                0.004591594    0.00000000    0.0000    0.00000000\ndept_ICUTRUE               0.015909647    0.00000000    0.0000    0.00000000\nbaseline_HGB               0.132551782    0.00000000    0.0000    0.00000000\nbaseline_WBC               0.006076653    0.00000000    0.0000    0.00000000\nbaseline_PLT               1.000000000    1.00000000    1.0000    1.00000000\nLZD_duration               0.999440226    1.00000000    1.0000    1.00000000\ninvasive_ETITRUE           0.159926345    0.00000000    0.0000    0.00000000\ninvasive_CVCTRUE           0.437631439    0.00000000    1.0000    0.00000000\ninvasive_IHDTRUE           0.007193305    0.00000000    0.0000    0.00000000\ninvasive_CRRTTRUE          0.977553124    1.00000000    1.0000    1.00000000\ncomorb_HTNTRUE             0.004890515    0.00000000    0.0000    0.00000000\ncomorb_DMTRUE              0.006236311    0.00000000    0.0000    0.00000000\ncomorb_HFTRUE              0.038882901    0.00000000    0.0000    0.00000000\ncomorb_anginaTRUE          0.004754072    0.00000000    0.0000    0.00000000\ncomorb_cirrTRUE            0.058583336    0.00000000    0.0000    0.00000000\ncomorb_COPDTRUE            0.011346871    0.00000000    0.0000    0.00000000\ncomorb_CVATRUE             0.038832012    0.00000000    0.0000    0.00000000\ncomorb_MITRUE              0.008914210    0.00000000    0.0000    0.00000000\ncomorb_KTRUE               0.004848561    0.00000000    0.0000    0.00000000\ncomorb_hematologicalTRUE   0.013245672    0.00000000    0.0000    0.00000000\ncomorb_hemaTRUE            0.005100424    0.00000000    0.0000    0.00000000\ninfect_sepsisTRUE          0.043644641    0.00000000    0.0000    0.00000000\ninfect_CAPTRUE             0.004953124    0.00000000    0.0000    0.00000000\ninfect_HAPTRUE             0.009660585    0.00000000    0.0000    0.00000000\ninfect_SSTITRUE            0.020289932    0.00000000    0.0000    0.00000000\ninfect_CNSTRUE             0.004683497    0.00000000    0.0000    0.00000000\ninfect_IAITRUE             0.004209504    0.00000000    0.0000    0.00000000\ninfect_UTITRUE             0.004939258    0.00000000    0.0000    0.00000000\ninfect_BJITRUE             0.005742853    0.00000000    0.0000    0.00000000\ninfect_septicemiaTRUE      0.119059825    0.00000000    0.0000    0.00000000\ncomed_aspirinTRUE          0.004610314    0.00000000    0.0000    0.00000000\ncomed_diclofenacTRUE       0.004945676    0.00000000    0.0000    0.00000000\ncomed_ibuprofenTRUE        0.004723226    0.00000000    0.0000    0.00000000\ncomed_paracetamolTRUE      0.005237761    0.00000000    0.0000    0.00000000\ncomed_penicillinTRUE       0.010857309    0.00000000    0.0000    0.00000000\ncomed_cephaTRUE            0.010109273    0.00000000    0.0000    0.00000000\ncomed_carbapenemTRUE       0.007218616    0.00000000    0.0000    0.00000000\ncomed_cotrimoxazolTRUE     0.060054915    0.00000000    0.0000    0.00000000\ncomed_vancomycinTRUE       0.020622855    0.00000000    0.0000    0.00000000\ncomed_levofloxacinTRUE     0.004793353    0.00000000    0.0000    0.00000000\ncomed_teicoplaninTRUE      0.129084745    0.00000000    0.0000    0.00000000\ncomed_ethambutolTRUE       0.004592000    0.00000000    0.0000    0.00000000\ncomed_pyrazinamidTRUE      0.008685547    0.00000000    0.0000    0.00000000\ncomed_rifampinTRUE         0.005994528    0.00000000    0.0000    0.00000000\ncomed_heparinTRUE          0.130093993    0.00000000    0.0000    0.00000000\ncomed_clopidogrelTRUE      0.013509239    0.00000000    0.0000    0.00000000\ncomed_enoxaparinTRUE       0.004888596    0.00000000    0.0000    0.00000000\ncomed_dexamethasonTRUE     0.005093816    0.00000000    0.0000    0.00000000\ncomed_amiodaronTRUE        0.033415772    0.00000000    0.0000    0.00000000\ncomed_furosemidTRUE        0.124592885    0.00000000    0.0000    0.00000000\ncomed_haloperidolTRUE      0.004671079    0.00000000    0.0000    0.00000000\ncomed_valproicTRUE         0.004526790    0.00000000    0.0000    0.00000000\nBF                                  NA    0.09912163    1.0000    0.03330452\nPostProbs                           NA    0.07340000    0.0712    0.02460000\nR2                                  NA    0.17030000    0.1804    0.16810000\ndim                                 NA    5.00000000    6.0000    5.00000000\nlogmarg                             NA -426.91916654 -424.6078 -428.00982113\n                              model 4      model 5\nIntercept                   1.0000000    1.0000000\npatient_age                 1.0000000    0.0000000\npatient_sexTRUE             0.0000000    0.0000000\nLZD_dose_per_weight         0.0000000    0.0000000\nbaseline_CLCR               0.0000000    1.0000000\ndept_ERTRUE                 0.0000000    0.0000000\ndept_ICUTRUE                0.0000000    0.0000000\nbaseline_HGB                0.0000000    0.0000000\nbaseline_WBC                0.0000000    0.0000000\nbaseline_PLT                1.0000000    1.0000000\nLZD_duration                1.0000000    1.0000000\ninvasive_ETITRUE            0.0000000    1.0000000\ninvasive_CVCTRUE            0.0000000    0.0000000\ninvasive_IHDTRUE            0.0000000    0.0000000\ninvasive_CRRTTRUE           1.0000000    1.0000000\ncomorb_HTNTRUE              0.0000000    0.0000000\ncomorb_DMTRUE               0.0000000    0.0000000\ncomorb_HFTRUE               0.0000000    0.0000000\ncomorb_anginaTRUE           0.0000000    0.0000000\ncomorb_cirrTRUE             0.0000000    0.0000000\ncomorb_COPDTRUE             0.0000000    0.0000000\ncomorb_CVATRUE              0.0000000    0.0000000\ncomorb_MITRUE               0.0000000    0.0000000\ncomorb_KTRUE                0.0000000    0.0000000\ncomorb_hematologicalTRUE    0.0000000    0.0000000\ncomorb_hemaTRUE             0.0000000    0.0000000\ninfect_sepsisTRUE           0.0000000    0.0000000\ninfect_CAPTRUE              0.0000000    0.0000000\ninfect_HAPTRUE              0.0000000    0.0000000\ninfect_SSTITRUE             0.0000000    0.0000000\ninfect_CNSTRUE              0.0000000    0.0000000\ninfect_IAITRUE              0.0000000    0.0000000\ninfect_UTITRUE              0.0000000    0.0000000\ninfect_BJITRUE              0.0000000    0.0000000\ninfect_septicemiaTRUE       0.0000000    0.0000000\ncomed_aspirinTRUE           0.0000000    0.0000000\ncomed_diclofenacTRUE        0.0000000    0.0000000\ncomed_ibuprofenTRUE         0.0000000    0.0000000\ncomed_paracetamolTRUE       0.0000000    0.0000000\ncomed_penicillinTRUE        0.0000000    0.0000000\ncomed_cephaTRUE             0.0000000    0.0000000\ncomed_carbapenemTRUE        0.0000000    0.0000000\ncomed_cotrimoxazolTRUE      0.0000000    0.0000000\ncomed_vancomycinTRUE        0.0000000    0.0000000\ncomed_levofloxacinTRUE      0.0000000    0.0000000\ncomed_teicoplaninTRUE       0.0000000    0.0000000\ncomed_ethambutolTRUE        0.0000000    0.0000000\ncomed_pyrazinamidTRUE       0.0000000    0.0000000\ncomed_rifampinTRUE          0.0000000    0.0000000\ncomed_heparinTRUE           0.0000000    0.0000000\ncomed_clopidogrelTRUE       0.0000000    0.0000000\ncomed_enoxaparinTRUE        0.0000000    0.0000000\ncomed_dexamethasonTRUE      0.0000000    0.0000000\ncomed_amiodaronTRUE         0.0000000    0.0000000\ncomed_furosemidTRUE         1.0000000    0.0000000\ncomed_haloperidolTRUE       0.0000000    0.0000000\ncomed_valproicTRUE          0.0000000    0.0000000\nBF                          0.2923214    0.2919177\nPostProbs                   0.0208000    0.0208000\nR2                          0.1780000    0.1780000\ndim                         6.0000000    6.0000000\nlogmarg                  -425.8376602 -425.8390422\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-1.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-2.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-3.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-4.png)\n:::\n\n```{.r .cell-code .hidden}\nimage(multi_model, rotate = FALSE)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-5.png)\n:::\n\n```{.r .cell-code .hidden}\ndiagnostics(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-6.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-5-7.png)\n:::\n\n```{.r .cell-code .hidden}\nmulti_predict_HPM <- variable.names(predict(multi_model, estimator = \"HPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # highest probability model\nmulti_predict_BPM <- variable.names(predict(multi_model, estimator = \"BPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # best predictive model, this model is weird\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.3.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.3.0\n✔ recipes      1.0.9     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ Matrix::expand()  masks tidyr::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ Matrix::pack()    masks tidyr::pack()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n✖ Matrix::unpack()  masks tidyr::unpack()\n✖ recipes::update() masks Matrix::update(), stats::update()\n• Use tidymodels_prefer() to resolve common conflicts.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata_patient_complete_response_as_factor <- data_patient_complete |>\n  mutate(\n    flag_ADR_TP_ID = as.factor(flag_ADR_TP_ID)\n  )\n\nmodel_full <- logistic_reg() |>\n  set_engine(\"glm\") |>\n  set_mode(\"classification\") |>\n  fit(\n    reformulate(\n      termlabels = multi_predict_HPM,\n      response = \"flag_ADR_TP_ID\"\n    ),\n    data = data_patient_complete_response_as_factor\n  )\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n# Check Model Assumptions\n\n## Linearity\n\nVisual check of linearity assumption using partial-residual plots (component+residual plots).\n\nBlue dashed line: linear fit of the partial residuals.\n\nRed line: smoothed conditional mean\n\nThe lines should be close together and the red line should be linear. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"patient_age\")\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-8-1.png)\n:::\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"baseline_PLT\")\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-8-2.png)\n:::\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"LZD_duration\")\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-8-3.png)\n:::\n:::\n\n\n\n\nResult: No obvious non-linearity in the partial-residual plots.\n\n## No Multicollinearity\n\nVIFs from the coefficient estimates should be less than 5 and as close to 1 as possible.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::vif(model_full$fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  patient_age  baseline_PLT  LZD_duration invasive_CRRT \n     1.028328      1.089070      1.087972      1.002530 \n```\n\n\n:::\n:::\n\n\n\n\nResult: VIFs are all less than 5 and close to 1.\n\n## No Outlier Effects\n\nVisual check from influence plot.\n\nIndividual observations should not have too much influence on the model.\n\nInfluence plot: \n\n- x-axis: Extreme values (Hat-values)\n- y-axis: Leverage (Studentized residuals)\n- Size of points: Cook's distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::influencePlot(model_full$fit)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-10-1.png)\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       StudRes         Hat       CookD\n292  0.8611717 0.058037287 0.005623179\n301 -2.1323174 0.008957174 0.015234647\n335 -1.0748001 0.039483700 0.006456634\n364  2.5264097 0.003270231 0.014774994\n504  2.4184715 0.003775986 0.012961219\n634  1.9030701 0.016178072 0.016297578\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# influential_obs <- influence.measures(model_full$fit)$is.inf |> apply(1, any) |> which() |> unname()\n```\n:::\n\n\n\n\nResult: Influential observations identified. \n\nDONE: Investigate observations 292, 301, 335, 364, 504, 634. \n\nInvestigation result:\n\n- invasive_CVC: 5/6\n- comed_furosemid: 3/6\n- infect_septicemia: 3/6\n\ninvasive_CVC might be a predictor.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# data_patient_complete |>\n#   slice(c(292, 301, 335, 364, 504, 634)) |> summary()\n```\n:::\n\n\n\n\n# Model Performance\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(CalibrationCurves)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: rms\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Hmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:parsnip':\n\n    translate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npHat <- predict(model_full$fit, data_patient_complete, type = \"response\")\nyTest <- data_patient_complete$flag_ADR_TP_ID\ncalperf <- valProbggplot(pHat, yTest)\n\napparent_performance_metrics <- tibble(\n  apparent_C_index = calperf$Cindex[[1]],\n  apparent_calibration_intercept = calperf$Calibration$Intercept[[1]],\n  apparent_calibration_slope = calperf$Calibration$Slope[[1]]\n)\n\nsave(apparent_performance_metrics, file = \"data/model-performance/apparent-performance-metrics.rda\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsave(model_full, file = \"data/model-performance/model-full.rda\")\n```\n:::",
    "supporting": [
      "3-apparent-performance_files\\figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}