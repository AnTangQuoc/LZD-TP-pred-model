{
  "hash": "fbd331dcfa996224265be37e22deec46",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Model Development and Apparent Validation\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/initialize-data-analysis.r\", local = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nRows: 5669 Columns: 113\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (20): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (4): baseline_date, LZD_start, LZD_end, test_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 780 Columns: 105\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): patient_ID, site, dept, LZD_route\ndbl  (13): patient_age, patient_weight, charlson, baseline_CLCR, baseline_WB...\nlgl  (85): patient_sex, dept_ICU, dept_ER, dept_other, invasive_ETI, invasiv...\ndate  (3): baseline_date, LZD_start, LZD_end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(BAS)\nrun_bas_glm <- function(data, formula, family, ...) {\n  bas.glm(formula, data = data, family = family, ...)\n}\n\nmulti_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_bas_glm(\n    formula = flag_ADR_TP_ID ~ .,\n    family = binomial(),\n    MCMC.iterations = 100000, # 100000 for speed, this should either be 2 million iterations or NULL\n    method = \"MCMC\"\n  )\n\nsummary(multi_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         P(B != 0 | Y)      model 1       model 2       model 3\nIntercept                      1.00000    1.0000000    1.00000000    1.00000000\npatient_age                    0.76737    1.0000000    1.00000000    0.00000000\npatient_sexTRUE                0.01627    0.0000000    0.00000000    0.00000000\nLZD_dose_per_weight            0.01612    0.0000000    0.00000000    0.00000000\nbaseline_CLCR                  0.28726    0.0000000    0.00000000    1.00000000\ndept_ERTRUE                    0.01932    0.0000000    0.00000000    0.00000000\ndept_ICUTRUE                   0.03424    0.0000000    0.00000000    0.00000000\nbaseline_HGB                   0.16907    0.0000000    0.00000000    0.00000000\nbaseline_WBC                   0.01678    0.0000000    0.00000000    0.00000000\nbaseline_PLT                   0.99982    1.0000000    1.00000000    1.00000000\nLZD_duration                   0.99695    1.0000000    1.00000000    1.00000000\ninvasive_ETITRUE               0.17414    0.0000000    0.00000000    0.00000000\ninvasive_CVCTRUE               0.47029    1.0000000    0.00000000    0.00000000\ninvasive_IHDTRUE               0.01618    0.0000000    0.00000000    0.00000000\ninvasive_CRRTTRUE              0.96791    1.0000000    1.00000000    1.00000000\ncomorb_HTNTRUE                 0.01669    0.0000000    0.00000000    0.00000000\ncomorb_DMTRUE                  0.01687    0.0000000    0.00000000    0.00000000\ncomorb_HFTRUE                  0.06648    0.0000000    0.00000000    0.00000000\ncomorb_anginaTRUE              0.01555    0.0000000    0.00000000    0.00000000\ncomorb_cirrTRUE                0.08470    0.0000000    0.00000000    0.00000000\ncomorb_COPDTRUE                0.02449    0.0000000    0.00000000    0.00000000\ncomorb_CVATRUE                 0.06293    0.0000000    0.00000000    0.00000000\ncomorb_MITRUE                  0.02416    0.0000000    0.00000000    0.00000000\ncomorb_KTRUE                   0.01273    0.0000000    0.00000000    0.00000000\ncomorb_hematologicalTRUE       0.02941    0.0000000    0.00000000    0.00000000\ncomorb_hemaTRUE                0.01366    0.0000000    0.00000000    0.00000000\ninfect_sepsisTRUE              0.08770    0.0000000    0.00000000    0.00000000\ninfect_CAPTRUE                 0.01655    0.0000000    0.00000000    0.00000000\ninfect_HAPTRUE                 0.02602    0.0000000    0.00000000    0.00000000\ninfect_SSTITRUE                0.03959    0.0000000    0.00000000    0.00000000\ninfect_CNSTRUE                 0.01329    0.0000000    0.00000000    0.00000000\ninfect_IAITRUE                 0.01258    0.0000000    0.00000000    0.00000000\ninfect_UTITRUE                 0.01705    0.0000000    0.00000000    0.00000000\ninfect_BJITRUE                 0.01781    0.0000000    0.00000000    0.00000000\ninfect_septicemiaTRUE          0.17011    0.0000000    0.00000000    0.00000000\ncomed_aspirinTRUE              0.01490    0.0000000    0.00000000    0.00000000\ncomed_diclofenacTRUE           0.01696    0.0000000    0.00000000    0.00000000\ncomed_ibuprofenTRUE            0.01406    0.0000000    0.00000000    0.00000000\ncomed_paracetamolTRUE          0.01511    0.0000000    0.00000000    0.00000000\ncomed_penicillinTRUE           0.02610    0.0000000    0.00000000    0.00000000\ncomed_cephaTRUE                0.02390    0.0000000    0.00000000    0.00000000\ncomed_carbapenemTRUE           0.01539    0.0000000    0.00000000    0.00000000\ncomed_cotrimoxazolTRUE         0.08205    0.0000000    0.00000000    0.00000000\ncomed_vancomycinTRUE           0.04294    0.0000000    0.00000000    0.00000000\ncomed_levofloxacinTRUE         0.01165    0.0000000    0.00000000    0.00000000\ncomed_teicoplaninTRUE          0.17957    0.0000000    0.00000000    0.00000000\ncomed_ethambutolTRUE           0.01861    0.0000000    0.00000000    0.00000000\ncomed_pyrazinamidTRUE          0.02486    0.0000000    0.00000000    0.00000000\ncomed_rifampinTRUE             0.02112    0.0000000    0.00000000    0.00000000\ncomed_heparinTRUE              0.15265    0.0000000    0.00000000    0.00000000\ncomed_clopidogrelTRUE          0.03123    0.0000000    0.00000000    0.00000000\ncomed_enoxaparinTRUE           0.01762    0.0000000    0.00000000    0.00000000\ncomed_dexamethasonTRUE         0.01930    0.0000000    0.00000000    0.00000000\ncomed_amiodaronTRUE            0.06140    0.0000000    0.00000000    0.00000000\ncomed_furosemidTRUE            0.15021    0.0000000    0.00000000    0.00000000\ncomed_haloperidolTRUE          0.01150    0.0000000    0.00000000    0.00000000\ncomed_valproicTRUE             0.01223    0.0000000    0.00000000    0.00000000\nBF                                  NA    0.4913641    0.04907486    0.01648943\nPostProbs                           NA    0.0498000    0.04620000    0.01830000\nR2                                  NA    0.1804000    0.17030000    0.16810000\ndim                                 NA    6.0000000    5.00000000    5.00000000\nlogmarg                             NA -424.5802826 -426.88412099 -427.97474816\n                           model 4     model 5\nIntercept                   1.0000    1.000000\npatient_age                 1.0000    1.000000\npatient_sexTRUE             0.0000    0.000000\nLZD_dose_per_weight         0.0000    0.000000\nbaseline_CLCR               0.0000    0.000000\ndept_ERTRUE                 0.0000    0.000000\ndept_ICUTRUE                0.0000    0.000000\nbaseline_HGB                1.0000    0.000000\nbaseline_WBC                0.0000    0.000000\nbaseline_PLT                1.0000    1.000000\nLZD_duration                1.0000    1.000000\ninvasive_ETITRUE            0.0000    0.000000\ninvasive_CVCTRUE            1.0000    1.000000\ninvasive_IHDTRUE            0.0000    0.000000\ninvasive_CRRTTRUE           1.0000    1.000000\ncomorb_HTNTRUE              0.0000    0.000000\ncomorb_DMTRUE               0.0000    0.000000\ncomorb_HFTRUE               0.0000    0.000000\ncomorb_anginaTRUE           0.0000    0.000000\ncomorb_cirrTRUE             0.0000    0.000000\ncomorb_COPDTRUE             0.0000    0.000000\ncomorb_CVATRUE              0.0000    0.000000\ncomorb_MITRUE               0.0000    0.000000\ncomorb_KTRUE                0.0000    0.000000\ncomorb_hematologicalTRUE    0.0000    0.000000\ncomorb_hemaTRUE             0.0000    0.000000\ninfect_sepsisTRUE           0.0000    0.000000\ninfect_CAPTRUE              0.0000    0.000000\ninfect_HAPTRUE              0.0000    0.000000\ninfect_SSTITRUE             0.0000    0.000000\ninfect_CNSTRUE              0.0000    0.000000\ninfect_IAITRUE              0.0000    0.000000\ninfect_UTITRUE              0.0000    0.000000\ninfect_BJITRUE              0.0000    0.000000\ninfect_septicemiaTRUE       0.0000    1.000000\ncomed_aspirinTRUE           0.0000    0.000000\ncomed_diclofenacTRUE        0.0000    0.000000\ncomed_ibuprofenTRUE         0.0000    0.000000\ncomed_paracetamolTRUE       0.0000    0.000000\ncomed_penicillinTRUE        0.0000    0.000000\ncomed_cephaTRUE             0.0000    0.000000\ncomed_carbapenemTRUE        0.0000    0.000000\ncomed_cotrimoxazolTRUE      0.0000    0.000000\ncomed_vancomycinTRUE        0.0000    0.000000\ncomed_levofloxacinTRUE      0.0000    0.000000\ncomed_teicoplaninTRUE       0.0000    0.000000\ncomed_ethambutolTRUE        0.0000    0.000000\ncomed_pyrazinamidTRUE       0.0000    0.000000\ncomed_rifampinTRUE          0.0000    0.000000\ncomed_heparinTRUE           0.0000    0.000000\ncomed_clopidogrelTRUE       0.0000    0.000000\ncomed_enoxaparinTRUE        0.0000    0.000000\ncomed_dexamethasonTRUE      0.0000    0.000000\ncomed_amiodaronTRUE         0.0000    0.000000\ncomed_furosemidTRUE         0.0000    0.000000\ncomed_haloperidolTRUE       0.0000    0.000000\ncomed_valproicTRUE          0.0000    0.000000\nBF                          1.0000    0.894036\nPostProbs                   0.0159    0.015100\nR2                          0.1871    0.186900\ndim                         7.0000    7.000000\nlogmarg                  -423.8697 -423.981722\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-1.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-2.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-3.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-4.png)\n:::\n\n```{.r .cell-code .hidden}\nimage(multi_model, rotate = FALSE)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-5.png)\n:::\n\n```{.r .cell-code .hidden}\ndiagnostics(multi_model)\n```\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-6.png)\n:::\n\n::: {.cell-output-display}\n![](3-apparent-performance_files/figure-jats/unnamed-chunk-2-7.png)\n:::\n\n```{.r .cell-code .hidden}\nmulti_predict_HPM <- variable.names(predict(multi_model, estimator = \"HPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # highest probability model\nmulti_predict_BPM <- variable.names(predict(multi_model, estimator = \"BPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # best predictive model, this model is weird\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.3.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.3.0\n✔ recipes      1.0.9     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata_patient_complete_response_as_factor <- data_patient_complete |>\n  mutate(\n    flag_ADR_TP_ID = as.factor(flag_ADR_TP_ID)\n  )\n\nmodel_full <- logistic_reg() |>\n  set_engine(\"glm\") |>\n  set_mode(\"classification\") |>\n  fit(\n    reformulate(\n      termlabels = multi_predict_HPM,\n      response = \"flag_ADR_TP_ID\"\n    ),\n    data = data_patient_complete_response_as_factor\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(CalibrationCurves)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: rms\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Hmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:parsnip':\n\n    translate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npHat <- predict(model_full$fit, data_patient_complete, type = \"response\")\nyTest <- data_patient_complete$flag_ADR_TP_ID\ncalperf <- valProbggplot(pHat, yTest)\ncalperf$Cindex[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7851257\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncalperf$Calibration$Intercept[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3.362173e-09\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncalperf$Calibration$Slope[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsave(model_full, file = \"data/model-performance/model_full.rda\")\n```\n:::",
    "supporting": [
      "3-apparent-performance_files\\figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}