{
  "hash": "74824c578b99050dd7aea2d4fbd533a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Model Development and Apparent Validation\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/initialize-data-analysis.r\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/BMA-model-no-initial-var.r\") # run_bas_glm() function\n```\n:::\n\n\n\n\n# Penalized Likelihood Methods\n## Backwards Stepwise Logistic Regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# library(StepReg)\n# run_stepwise_logit <- function(data, formula) {\n#   stepwiseLogit(\n#     formula,\n#     data = data,\n#     include = NULL,\n#     selection = \"backward\",\n#     select = \"AIC\"\n#   )\n# }\n\n# stepwise_model <- data_patient_complete |>\n#   select(all_of(predictor_list), flag_ADR_TP_ID) |>\n#   run_stepwise_logit(\n#     formula = flag_ADR_TP_ID ~ .\n#   )\n\n# stepwise_model |> summary()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrun_step_AIC <- function(data, formula) {\n  MASS::stepAIC(\n    glm(\n      formula = formula,\n      data = data\n    ),\n    direction = \"backward\",\n    trace = FALSE\n  )\n}\n\nstepwise_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_step_AIC(\n    formula = flag_ADR_TP_ID ~ .\n  )\n\nstepwise_model$coefficients |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18\n```\n\n\n:::\n:::\n\n\n\n\nResults: Stepwise algorithm selected 17 predictors.\n\n## LASSO Variable Selection\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(glmnet)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Matrix\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Matrix'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoaded glmnet 4.1-8\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npredictor_matrix <- data_patient_complete |>\n  select(all_of(predictor_list)) |>\n  as.matrix()\nresponse_matrix <- data_patient_complete |>\n  select(flag_ADR_TP_ID) |>\n  pull()\n\nlasso_fit <- glmnet(\n  x = predictor_matrix,\n  y = response_matrix,\n  family = \"binomial\",\n  alpha = 1\n)\n\ncv_lasso_fit <- cv.glmnet(\n  x = predictor_matrix,\n  y = response_matrix,\n  family = \"binomial\",\n  alpha = 1,\n  nfolds = 5\n)\n\ncoef(lasso_fit, s = cv_lasso_fit$lambda.min)@i |> length() - 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 27\n```\n\n\n:::\n:::\n\n\n\n\nResults: LASSO algorithm selected 22-25 predictors.\n\nComment: Penalized likelihood methods have comparable predictive performance to Bayesian methods [citation needed], but select many more predictors.\n\n# Bayesian Model Selection\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmulti_model <- data_patient_complete |>\n  select(all_of(predictor_list), flag_ADR_TP_ID) |>\n  run_bas_glm(\n    formula = flag_ADR_TP_ID ~ .,\n    include.always = ~1\n  )\n\nsummary(multi_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         P(B != 0 | Y)   model 1      model 2       model 3\nIntercept                  1.000000000    1.0000    1.0000000    1.00000000\npatient_age                0.783421686    1.0000    1.0000000    1.00000000\npatient_sexTRUE            0.004866160    0.0000    0.0000000    0.00000000\nLZD_dose_per_weight        0.005129394    0.0000    0.0000000    0.00000000\nbaseline_CLCR              0.317102499    0.0000    0.0000000    0.00000000\ndept_ERTRUE                0.004993544    0.0000    0.0000000    0.00000000\ndept_ICUTRUE               0.010862190    0.0000    0.0000000    0.00000000\nbaseline_HGB               0.340428198    1.0000    0.0000000    0.00000000\nbaseline_WBC               0.014821446    0.0000    0.0000000    0.00000000\nbaseline_PLT               1.000000000    1.0000    1.0000000    1.00000000\nLZD_duration               0.999993030    1.0000    1.0000000    1.00000000\ninvasive_ETITRUE           0.124579495    0.0000    0.0000000    0.00000000\ninvasive_CVCTRUE           0.494658258    1.0000    1.0000000    0.00000000\ninvasive_IHDTRUE           0.006397433    0.0000    0.0000000    0.00000000\ninvasive_CRRTTRUE          0.980592185    1.0000    1.0000000    1.00000000\ncomorb_HTNTRUE             0.005028324    0.0000    0.0000000    0.00000000\ncomorb_DMTRUE              0.006940891    0.0000    0.0000000    0.00000000\ncomorb_HFTRUE              0.083493798    0.0000    0.0000000    0.00000000\ncomorb_anginaTRUE          0.004661934    0.0000    0.0000000    0.00000000\ncomorb_cirrTRUE            0.087583609    0.0000    0.0000000    0.00000000\ncomorb_COPDTRUE            0.013545589    0.0000    0.0000000    0.00000000\ncomorb_CVATRUE             0.012530993    0.0000    0.0000000    0.00000000\ncomorb_MITRUE              0.010615371    0.0000    0.0000000    0.00000000\ncomorb_KTRUE               0.004235483    0.0000    0.0000000    0.00000000\ncomorb_hematologicalTRUE   0.013528421    0.0000    0.0000000    0.00000000\ncomorb_hemaTRUE            0.005188366    0.0000    0.0000000    0.00000000\ninfect_sepsisTRUE          0.047537417    0.0000    0.0000000    0.00000000\ninfect_CAPTRUE             0.007384045    0.0000    0.0000000    0.00000000\ninfect_HAPTRUE             0.018265136    0.0000    0.0000000    0.00000000\ninfect_SSTITRUE            0.021183437    0.0000    0.0000000    0.00000000\ninfect_CNSTRUE             0.004936357    0.0000    0.0000000    0.00000000\ninfect_IAITRUE             0.004807389    0.0000    0.0000000    0.00000000\ninfect_UTITRUE             0.005946950    0.0000    0.0000000    0.00000000\ninfect_BJITRUE             0.007779921    0.0000    0.0000000    0.00000000\ninfect_septicemiaTRUE      0.202170296    0.0000    0.0000000    0.00000000\ncomed_aspirinTRUE          0.004893286    0.0000    0.0000000    0.00000000\ncomed_diclofenacTRUE       0.004796063    0.0000    0.0000000    0.00000000\ncomed_ibuprofenTRUE        0.004630808    0.0000    0.0000000    0.00000000\ncomed_paracetamolTRUE      0.005850308    0.0000    0.0000000    0.00000000\ncomed_penicillinTRUE       0.008001127    0.0000    0.0000000    0.00000000\ncomed_cephaTRUE            0.008909122    0.0000    0.0000000    0.00000000\ncomed_carbapenemTRUE       0.005353068    0.0000    0.0000000    0.00000000\ncomed_cotrimoxazolTRUE     0.067477145    0.0000    0.0000000    0.00000000\ncomed_vancomycinTRUE       0.029016579    0.0000    0.0000000    0.00000000\ncomed_levofloxacinTRUE     0.004445420    0.0000    0.0000000    0.00000000\ncomed_teicoplaninTRUE      0.013431503    0.0000    0.0000000    0.00000000\ncomed_ethambutolTRUE       0.005244326    0.0000    0.0000000    0.00000000\ncomed_pyrazinamidTRUE      0.010924507    0.0000    0.0000000    0.00000000\ncomed_rifampinTRUE         0.010397681    0.0000    0.0000000    0.00000000\ncomed_heparinTRUE          0.059683899    0.0000    0.0000000    0.00000000\ncomed_clopidogrelTRUE      0.017107315    0.0000    0.0000000    0.00000000\ncomed_enoxaparinTRUE       0.005461616    0.0000    0.0000000    0.00000000\ncomed_dexamethasonTRUE     0.006861660    0.0000    0.0000000    0.00000000\ncomed_amiodaronTRUE        0.027576529    0.0000    0.0000000    0.00000000\ncomed_furosemidTRUE        0.163355688    0.0000    0.0000000    0.00000000\ncomed_haloperidolTRUE      0.008221869    0.0000    0.0000000    0.00000000\ncomed_valproicTRUE         0.005020816    0.0000    0.0000000    0.00000000\nBF                                  NA    1.0000    0.1151729    0.01021057\nPostProbs                           NA    0.0481    0.0471000    0.04340000\nR2                                  NA    0.1838    0.1745000    0.16450000\ndim                                 NA    7.0000    6.0000000    5.00000000\nlogmarg                             NA -439.7101 -441.8714407 -444.29445157\n                               model 4       model 5\nIntercept                 1.000000e+00    1.00000000\npatient_age               0.000000e+00    1.00000000\npatient_sexTRUE           0.000000e+00    0.00000000\nLZD_dose_per_weight       0.000000e+00    0.00000000\nbaseline_CLCR             1.000000e+00    0.00000000\ndept_ERTRUE               0.000000e+00    0.00000000\ndept_ICUTRUE              0.000000e+00    0.00000000\nbaseline_HGB              0.000000e+00    1.00000000\nbaseline_WBC              0.000000e+00    0.00000000\nbaseline_PLT              1.000000e+00    1.00000000\nLZD_duration              1.000000e+00    1.00000000\ninvasive_ETITRUE          0.000000e+00    0.00000000\ninvasive_CVCTRUE          0.000000e+00    0.00000000\ninvasive_IHDTRUE          0.000000e+00    0.00000000\ninvasive_CRRTTRUE         1.000000e+00    1.00000000\ncomorb_HTNTRUE            0.000000e+00    0.00000000\ncomorb_DMTRUE             0.000000e+00    0.00000000\ncomorb_HFTRUE             0.000000e+00    0.00000000\ncomorb_anginaTRUE         0.000000e+00    0.00000000\ncomorb_cirrTRUE           0.000000e+00    0.00000000\ncomorb_COPDTRUE           0.000000e+00    0.00000000\ncomorb_CVATRUE            0.000000e+00    0.00000000\ncomorb_MITRUE             0.000000e+00    0.00000000\ncomorb_KTRUE              0.000000e+00    0.00000000\ncomorb_hematologicalTRUE  0.000000e+00    0.00000000\ncomorb_hemaTRUE           0.000000e+00    0.00000000\ninfect_sepsisTRUE         0.000000e+00    0.00000000\ninfect_CAPTRUE            0.000000e+00    0.00000000\ninfect_HAPTRUE            0.000000e+00    0.00000000\ninfect_SSTITRUE           0.000000e+00    0.00000000\ninfect_CNSTRUE            0.000000e+00    0.00000000\ninfect_IAITRUE            0.000000e+00    0.00000000\ninfect_UTITRUE            0.000000e+00    0.00000000\ninfect_BJITRUE            0.000000e+00    0.00000000\ninfect_septicemiaTRUE     0.000000e+00    0.00000000\ncomed_aspirinTRUE         0.000000e+00    0.00000000\ncomed_diclofenacTRUE      0.000000e+00    0.00000000\ncomed_ibuprofenTRUE       0.000000e+00    0.00000000\ncomed_paracetamolTRUE     0.000000e+00    0.00000000\ncomed_penicillinTRUE      0.000000e+00    0.00000000\ncomed_cephaTRUE           0.000000e+00    0.00000000\ncomed_carbapenemTRUE      0.000000e+00    0.00000000\ncomed_cotrimoxazolTRUE    0.000000e+00    0.00000000\ncomed_vancomycinTRUE      0.000000e+00    0.00000000\ncomed_levofloxacinTRUE    0.000000e+00    0.00000000\ncomed_teicoplaninTRUE     0.000000e+00    0.00000000\ncomed_ethambutolTRUE      0.000000e+00    0.00000000\ncomed_pyrazinamidTRUE     0.000000e+00    0.00000000\ncomed_rifampinTRUE        0.000000e+00    0.00000000\ncomed_heparinTRUE         0.000000e+00    0.00000000\ncomed_clopidogrelTRUE     0.000000e+00    0.00000000\ncomed_enoxaparinTRUE      0.000000e+00    0.00000000\ncomed_dexamethasonTRUE    0.000000e+00    0.00000000\ncomed_amiodaronTRUE       0.000000e+00    0.00000000\ncomed_furosemidTRUE       0.000000e+00    0.00000000\ncomed_haloperidolTRUE     0.000000e+00    0.00000000\ncomed_valproicTRUE        0.000000e+00    0.00000000\nBF                        5.935666e-03    0.05614118\nPostProbs                 2.520000e-02    0.02290000\nR2                        1.634000e-01    0.17310000\ndim                       5.000000e+00    6.00000000\nlogmarg                  -4.448369e+02 -442.59000543\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nplot(multi_model)\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-1.png)\n:::\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-2.png)\n:::\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-3.png)\n:::\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-4.png)\n:::\n\n```{.r .cell-code .hidden}\nimage(multi_model, rotate = FALSE)\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-5.png)\n:::\n\n```{.r .cell-code .hidden}\ndiagnostics(multi_model)\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-6.png)\n:::\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-5-7.png)\n:::\n\n```{.r .cell-code .hidden}\nmulti_predict_HPM <- variable.names(predict(multi_model, estimator = \"HPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # highest probability model\nmulti_predict_BPM <- variable.names(predict(multi_model, estimator = \"BPM\"))[-1] |>\n  str_extract(paste(predictor_list, collapse = \"|\")) # best predictive model, this model is weird\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5      ✔ rsample      1.2.0 \n✔ dials        1.2.1      ✔ tune         1.1.2 \n✔ infer        1.0.6      ✔ workflows    1.1.4 \n✔ modeldata    1.3.0      ✔ workflowsets 1.0.1 \n✔ parsnip      1.2.0      ✔ yardstick    1.3.0 \n✔ recipes      1.0.10     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ Matrix::expand()  masks tidyr::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ Matrix::pack()    masks tidyr::pack()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n✖ Matrix::unpack()  masks tidyr::unpack()\n✖ recipes::update() masks Matrix::update(), stats::update()\n• Learn how to get started at https://www.tidymodels.org/start/\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata_patient_complete_response_as_factor <- data_patient_complete |>\n  mutate(\n    flag_ADR_TP_ID = as.factor(flag_ADR_TP_ID)\n  )\n\nmodel_full <- logistic_reg() |>\n  set_engine(\"glm\") |>\n  set_mode(\"classification\") |>\n  fit(\n    reformulate(\n      termlabels = multi_predict_HPM,\n      response = \"flag_ADR_TP_ID\"\n    ),\n    data = data_patient_complete_response_as_factor\n  )\n```\n:::\n\n\n\n\n# Check Model Assumptions\n\n## Linearity\n\nVisual check of linearity assumption using partial-residual plots (component+residual plots).\n\nBlue dashed line: linear fit of the partial residuals.\n\nRed line: smoothed conditional mean\n\nThe lines should be close together and the red line should be linear. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"patient_age\")\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-7-1.png)\n:::\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"baseline_PLT\")\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-7-2.png)\n:::\n\n```{.r .cell-code .hidden}\ncar::crPlot(model_full$fit, variable = \"LZD_duration\")\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-7-3.png)\n:::\n:::\n\n\n\n\nResult: No obvious non-linearity in the partial-residual plots.\n\n## No Multicollinearity\n\nVIFs from the coefficient estimates should be less than 5 and as close to 1 as possible.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::vif(model_full$fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  patient_age  baseline_HGB  baseline_PLT  LZD_duration  invasive_CVC \n     1.047767      1.015409      1.094139      1.102152      1.136600 \ninvasive_CRRT \n     1.129723 \n```\n\n\n:::\n:::\n\n\n\n\nResult: VIFs are all less than 5 and close to 1.\n\n## No Outlier Effects\n\nVisual check from influence plot.\n\nIndividual observations should not have too much influence on the model.\n\nInfluence plot: \n\n- x-axis: Extreme values (Hat-values)\n- y-axis: Leverage (Studentized residuals)\n- Size of points: Cook's distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncar::influencePlot(model_full$fit)\n```\n\n::: {.cell-output-display}\n![](03-apparent-performance_files/figure-jats/unnamed-chunk-9-1.png)\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      StudRes         Hat       CookD\n30   1.972941 0.013530192 0.011386152\n229 -1.543583 0.115456843 0.040187659\n310  0.958262 0.055317911 0.004933167\n443  2.494706 0.002698824 0.008077000\n756  2.484277 0.003456496 0.010011110\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# influential_obs <- influence.measures(model_full$fit)$is.inf |> apply(1, any) |> which() |> unname()\n```\n:::\n\n\n\n\nResult: Influential observations identified. \n\nDONE: Investigate observations 292, 301, 335, 364, 504, 634. \n\nInvestigation result:\n\n- invasive_CVC: 5/6\n- comed_furosemid: 3/6\n- infect_septicemia: 3/6\n\ninvasive_CVC might be a predictor.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# data_patient_complete |>\n#   slice(c(292, 301, 335, 364, 504, 634)) |> summary()\n```\n:::\n\n\n\n\n# Model Performance\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(CalibrationCurves)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: rms\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Hmisc\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:parsnip':\n\n    translate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npHat <- predict(model_full$fit, data_patient_complete, type = \"response\")\nyTest <- data_patient_complete$flag_ADR_TP_ID\ncalperf <- valProbggplot(pHat, yTest)\n\napparent_performance_metrics <- tibble(\n  apparent_C_index = calperf$Cindex[[1]],\n  apparent_calibration_intercept = calperf$Calibration$Intercept[[1]],\n  apparent_calibration_slope = calperf$Calibration$Slope[[1]]\n)\n\nsave(apparent_performance_metrics, file = \"data/model-performance/apparent-performance-metrics.rda\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsave(model_full, file = \"data/model-performance/model-full.rda\")\n```\n:::",
    "supporting": [
      "03-apparent-performance_files\\figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}