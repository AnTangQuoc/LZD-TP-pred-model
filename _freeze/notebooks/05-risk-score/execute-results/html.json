{
  "hash": "64c5abdf8be34b76484c3e19eb222c33",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Risk Score System and Algorithm\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsource(\"notebooks/initialize-data-analysis.r\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nload(\"data/model-performance/model-full.rda\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5      ✔ rsample      1.2.0 \n✔ dials        1.2.1      ✔ tune         1.1.2 \n✔ infer        1.0.6      ✔ workflows    1.1.4 \n✔ modeldata    1.3.0      ✔ workflowsets 1.0.1 \n✔ parsnip      1.2.0      ✔ yardstick    1.3.0 \n✔ recipes      1.0.10     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmodel_beta_estimates <- model_full$fit |>\n  tidy() |>\n  select(term, estimate, p.value)\n\nmodel_odds_ratios <- model_full$fit |>\n  tidy(conf.int = TRUE, exponentiate = TRUE) |>\n  select(term, estimate, conf.low, conf.high) |>\n  filter(term != \"(Intercept)\") |>\n  rename(odds_ratio = estimate, OR_lower = conf.low, OR_upper = conf.high)\n\npredictor_list_with_intercept <- c(predictor_list, \"(Intercept)\")\n\nparameter_estimates <- left_join(model_beta_estimates, model_odds_ratios, by = \"term\") |>\n  rename(risk_factor = term, beta = estimate, p_value = p.value) |>\n  mutate(risk_factor = str_extract(risk_factor, paste(predictor_list_with_intercept, collapse = \"|\")))\n```\n:::\n\n\n## Risk Score System\n\nAll code below is not automatic. Variables and ranges are manually defined. \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrisk_profile_1 <- tibble(\n  risk_factor = \"patient_age\",\n  min_range = c(18, 30, 40, 50, 60, 70, 80, 90), # minimum age is 18\n  max_range = lead(min_range, default = 101), # maximum age is 101, interval is 10\n  reference = (min_range + max_range) / 2,\n  flag_base_risk = FALSE\n) |>\n  mutate(\n    flag_base_risk = replace(flag_base_risk, 1, TRUE)\n  )\n\nrisk_profile_2 <- tibble(\n  risk_factor = \"baseline_PLT\",\n  min_range = c(150, 75, 50, 25, 18), # 1% percentile is 18\n  max_range = lag(min_range, default = 434), # 99% percentile is 434\n  reference = (min_range + max_range) / 2,\n  flag_base_risk = FALSE\n) |>\n  mutate(\n    min_range = replace(min_range, n(), -Inf),\n    max_range = replace(max_range, 1, Inf),\n    flag_base_risk = replace(flag_base_risk, 1, TRUE)\n  )\n\nrisk_profile_3 <- tibble(\n  risk_factor = \"LZD_duration\",\n  min_range = c(3, 7, 14), # 1% percentile is 3\n  max_range = lead(min_range, default = 26), # 99% percentile is 26\n  reference = (min_range + max_range) / 2,\n  flag_base_risk = FALSE\n) |>\n  mutate(\n    min_range = replace(min_range, 1, -Inf),\n    max_range = replace(max_range, n(), Inf),\n    flag_base_risk = replace(flag_base_risk, 1, TRUE)\n  )\n\nrisk_profile_4 <- tibble(\n  risk_factor = \"invasive_CRRT\",\n  min_range = c(0, 1), # 0 or 1\n  max_range = c(0, 1), # 0 or 1\n  reference = c(0, 1),\n  flag_base_risk = FALSE\n) |>\n  mutate(\n    flag_base_risk = replace(flag_base_risk, 1, TRUE)\n  )\n\nrisk_profile_5 <- tibble(\n  risk_factor = \"invasive_CVC\",\n  min_range = c(0, 1), # 0 or 1\n  max_range = c(0, 1), # 0 or 1\n  reference = c(0, 1),\n  flag_base_risk = FALSE\n) |>\n  mutate(\n    flag_base_risk = replace(flag_base_risk, 1, TRUE)\n  )\n\nrisk_profile <- bind_rows(risk_profile_1, risk_profile_2, risk_profile_3, risk_profile_4, risk_profile_5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nB_constant <- parameter_estimates |>\n  filter(risk_factor == \"patient_age\") |>\n  pull(beta) * 10 # constant equivalent to 10-year increase in age\n\npoints_system_full <- parameter_estimates |>\n  select(risk_factor, beta) |>\n  right_join(risk_profile, by = \"risk_factor\") |>\n  group_by(risk_factor) |>\n  mutate(\n    beta_sum = beta * (reference - reference[which.max(flag_base_risk)]),\n    points = round(beta_sum / B_constant, 0)\n  )\n\npoints_system_factors <- points_system_full |>\n  select(risk_factor, min_range, max_range, points)\n\nmin_points <- points_system_full |>\n  group_by(risk_factor) |>\n  summarise(min_points = min(points)) |>\n  summarise(total_min_points = sum(min_points)) |>\n  pull(total_min_points)\n\nmax_points <- points_system_full |>\n  group_by(risk_factor) |>\n  summarise(max_points = max(points)) |>\n  summarise(total_max_points = sum(max_points)) |>\n  pull(total_max_points)\n\nrisk_function <- function(points) {\n  intercept <- parameter_estimates |>\n    filter(risk_factor == \"Intercept\") |>\n    pull(beta)\n\n  beta_base <- points_system_full |>\n    filter(flag_base_risk == TRUE) |>\n    ungroup() |>\n    summarise(\n      beta_base = sum(beta * reference)\n    ) |>\n    pull(beta_base)\n\n  1 / (1 + exp(-(intercept + beta_base + B_constant * points)))\n}\n\npoints_system_risks <- tibble(\n  points_total = seq(min_points, max_points),\n  risk_estimate = risk_function(points_total)\n)\n\npoints_system_factors |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|risk_factor   | min_range| max_range| points|\n|:-------------|---------:|---------:|------:|\n|patient_age   |        18|        30|      0|\n|patient_age   |        30|        40|      1|\n|patient_age   |        40|        50|      2|\n|patient_age   |        50|        60|      3|\n|patient_age   |        60|        70|      4|\n|patient_age   |        70|        80|      5|\n|patient_age   |        80|        90|      6|\n|patient_age   |        90|       101|      7|\n|baseline_PLT  |       150|       Inf|      0|\n|baseline_PLT  |        75|       150|      7|\n|baseline_PLT  |        50|        75|      9|\n|baseline_PLT  |        25|        50|     10|\n|baseline_PLT  |      -Inf|        25|     11|\n|LZD_duration  |      -Inf|         7|      0|\n|LZD_duration  |         7|        14|      2|\n|LZD_duration  |        14|       Inf|      5|\n|invasive_CVC  |         0|         0|      0|\n|invasive_CVC  |         1|         1|      3|\n|invasive_CRRT |         0|         0|      0|\n|invasive_CRRT |         1|         1|      4|\n\n\n:::\n\n```{.r .cell-code .hidden}\npoints_system_risks |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| points_total| risk_estimate|\n|------------:|-------------:|\n|            0|     0.1145607|\n|            1|     0.1390520|\n|            2|     0.1677869|\n|            3|     0.2010730|\n|            4|     0.2390657|\n|            5|     0.2817057|\n|            6|     0.3286662|\n|            7|     0.3793210|\n|            8|     0.4327503|\n|            9|     0.4877908|\n|           10|     0.5431291|\n|           11|     0.5974229|\n|           12|     0.6494292|\n|           13|     0.6981120|\n|           14|     0.7427127|\n|           15|     0.7827745|\n|           16|     0.8181258|\n|           17|     0.8488351|\n|           18|     0.8751504|\n|           19|     0.8974382|\n|           20|     0.9161285|\n|           21|     0.9316722|\n|           22|     0.9445096|\n|           23|     0.9550515|\n|           24|     0.9636678|\n|           25|     0.9706830|\n|           26|     0.9763770|\n|           27|     0.9809867|\n|           28|     0.9847109|\n|           29|     0.9877149|\n|           30|     0.9901345|\n\n\n:::\n:::\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}